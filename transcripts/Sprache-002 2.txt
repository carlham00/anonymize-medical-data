SPEAKER_00:  For a better understanding of the background of our refactoring goal, we looked at related work. So on one hand, we looked at ways to make the development of cloud-native applications more privacy aware. And here, a DevOps cycle was proposed that is extended with privacy engineering methodology. And this was called the DevOps cycle. On the other hand, we looked at tracing as a way to enhance transparency.  In this presentation, we will focus on two specific tools that will be relevant for our refactoring.  So the first tool is TILT, which is a Transparency Information Language and Toolkit. In the paper in which TILT was proposed, three major contributions were made, with the first being an analysis of legal requirements in the General Data Protection Regulation, the GDPR, which is a relevant legal framework for privacy.  And here they identified what exactly is expected in the GDPR regarding transparency. And for our refactoring, the information purposes, legal basis, legitimate interests, recipient and third country transfer are of importance.  Also, the transparency information was transcribed in a structured and machine-readable language. Then they also provide a toolkit in Python and Java that can be used to enhance transparency in an application.  The second relevant tool is OpenTelemetry, which is an open source observability framework. And for our refactoring, the logging and tracing functionalities are particularly relevant. And here for the tracing spans and traces are used to make paths of requests made by users more transparent.  So after looking at related work and relevant tools, we will now talk about the architecture that we are going to refactor.
