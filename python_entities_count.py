# -*- coding: utf-8 -*-
"""python_entities_count.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1k7J7XbvX0wBoGQsy8YSVh1ph9LNCShC5
"""

from lxml import etree
from collections import Counter
import matplotlib.pyplot as plt
import os
import glob
from pathlib import Path

# Count the different kind of attributes
def count_phi_entities(xmi_file_path):

    # Load and parse the XMI file
    with open(xmi_file_path, 'rb') as f:
        tree = etree.parse(f)

    root = tree.getroot()

    # Find all PHI elements
    phi_elements = root.findall(".//{*}PHI")

    # Count by 'kind' attribute
    kind_counts = Counter()
    for el in phi_elements:
        kind = el.attrib.get('kind')
        if kind:
            kind_counts[kind] += 1

    return kind_counts

# create the plots
def plot_entity_counts(counts, filename):
    kinds = list(counts.keys())
    values = list(counts.values())

    # Generate a unique color for each entity type
    colors = plt.cm.tab20.colors  # A colormap with 20 distinguishable colors
    if len(kinds) > len(colors):
        # If more than 20 entities, repeat or generate random colors
        extended_colors = colors * ((len(kinds) // len(colors)) + 1)
        bar_colors = extended_colors[:len(kinds)]
    else:
        bar_colors = colors[:len(kinds)]

    plt.figure(figsize=(10, 6))
    plt.bar(kinds, values, color=bar_colors)
    plt.xlabel("PHI Entity Type")
    plt.ylabel("Count")
    plt.title(f"PHI Entity Distribution: {filename}")
    plt.xticks(rotation=45, ha='right')
    plt.tight_layout()
    plt.show()


if __name__ == '__main__':

  folder_path = Path("/home/ayachebaane/Schreibtisch/Projekt/python script to entities ana/") # the folder where all the xmi files are stored.Replace with your actual file path if needed

  # Get all .xmi files in the folder
  xmi_files = folder_path.glob("*.xmi")

  for xmi_path in xmi_files:

    #xmi_path = '/content/drive/MyDrive/python_script_ana/Albers.txt_phi.xmi'
    entity_counts = count_phi_entities(str(xmi_path))
    for entity, count in entity_counts.items():
        print(f"{entity}: {count}")

    # Plot
    plot_entity_counts(entity_counts, xmi_path.name)
